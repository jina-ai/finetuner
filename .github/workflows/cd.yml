name: CD

on:
  push:
    tags:
      - main

jobs:

  update-docs:
    name: Update docs
    runs-on: ubuntu-latest
    steps:
      - uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Manual Docs Build
          token: ${{ secrets.JINA_DEV_BOT }}
          inputs: '{ "release_token": "${{ env.release_token }}", "triggered_by": "TAG"}'
        env:
          release_token: ${{ secrets.FINETUNER_RELEASE_TOKEN }}

  create-release:
    name: Create GitHub release
    needs: update-docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: "main"
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: |
          python scripts/get-last-release-note.py
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ðŸ’« ${{ github.ref }}
          body_path: "tmp.md"
          draft: false
          prerelease: false

  publish-to-pypi:
    name: Publish release to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Release to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          JINA_SLACK_WEBHOOK: ${{ secrets.JINA_SLACK_WEBHOOK }}
        run: |
          pip install twine wheel
          python setup.py sdist
          twine upload dist/*
