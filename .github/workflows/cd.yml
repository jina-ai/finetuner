name: CD

on:
  push:
    branches:
      - main

env:
  HOST: ${{ secrets.FINETUNER_HOST }}
  JINA_AUTH_TOKEN: ${{ secrets.JINA_AUTH_TOKEN }}

jobs:

  update-docs:
    name: Update docs
    runs-on: ubuntu-latest
    steps:
      - uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Manual Docs Build
          token: ${{ secrets.JINA_DEV_BOT }}
          inputs: '{ "release_token": "${{ env.release_token }}", "triggered_by": "TAG"}'
        env:
          release_token: ${{ secrets.FINETUNER_RELEASE_TOKEN }}

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Install semantic-release
        run: npm install --global semantic-release @semantic-release/git semantic-release-pypi
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install requirements
        run: make init
      - name: Lint with flake8, black and isort
        run: make style
      - name: Run tests
        run: make test
        env:
          JINA_AUTH_TOKEN: ${{secrets.JINA_AUTH_TOKEN}}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
      - name: Install setuptools
        run: python -m pip install --upgrade setuptools wheel twine
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.TWINE_PASSWORD }}
          PYPI_USERNAME: ${{ secrets.TWINE_USERNAME }}
        run: npx semantic-release
