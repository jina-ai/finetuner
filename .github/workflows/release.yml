name: Release

on:
  push:
    tags:
      - "v*" # push to version tags trigger the build

jobs:
  check-tag-version:
    runs-on: ubuntu-latest
    if: github.event.base_ref == 'refs/heads/main' # Run only on main branch
    steps:
      - uses: actions/checkout@v2
      - name: Check that tag matches version
        run: |
          export TAG=$(git describe --tags --abbrev=0)
          export VERSION=$(python -c "print(open('finetuner/__init__.py', 'r').readline().split('=')[1].strip().replace('\'', ''))")
          if [[ ${TAG#v} != $VERSION ]]; then echo "Tag $TAG does not match the version $VERSION"; exit 1; fi

  release-pypi:
    needs: [check-tag-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Publish to PyPI
        run: |
          pip install setuptools twine wheel build
          python -m build
          twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

  release-github:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Release on GitHub
        run: ./scripts/release-note.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-docs:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Manual Docs Build
          token: ${{ secrets.JINA_DEV_BOT }}
          inputs: '{ "release_token": "${{ env.release_token }}", "triggered_by": "TAG"}'
        env:
          release_token: ${{ secrets.FINETUNER_RELEASE_TOKEN }}
